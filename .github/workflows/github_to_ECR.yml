name: Docker Build and push to ECR

on:
  push: 
    branches: [ "main"]

jobs:
  build-and-push:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials for ECR
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push the tagged docker image to AWS ECR 
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: executing remote ssh commands using password & Push Docker Image to ECR
        uses: appleboy/ssh-action@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
          IMAGE_TAG: latest   
        with:
          script: |
            aws configure set aws_access_key_id > echo $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key > echo $AWS_SECRET_ACCESS_KEY
            aws configure set default.region > echo $AWS_REGION
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 922799470279.dkr.ecr.us-east-1.amazonaws.com
            sudo docker rm -f `sudo docker ps -q` 
            sudo docker run -d -p 8080:8080 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          host: ${{ secrets.EC2_PUB_IP }}
          username: ubuntu 
          key: ${{ secrets.EC2_PRIVATE_KEY}}
          port: 22
          envs: 
            AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_REGION,ECR_REGISTRY,ECR_REPOSITORY,IMAGE_TAG 
            
      - name: Deploy docker image to AWS EC2 instance
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: webapp
          IMAGE_TAG: ${{ github.sha }}
          AWS_REGION: ${{ secrets.AWS_REGION}}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PUB_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: 
            EC2_PRIVATE_KEY,REGISTRY,REPOSITORY,IMAGE_TAG,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_REGION
          script: |
            sudo apt update
            sudo apt install docker.io -y
            sudo apt install awscli -y
            sudo $(aws ecr get-login --no-include-email --region us-east-1);
            sudo docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG
            sudo docker run -d --name myappcontainer -p 8080:8080 $REGISTRY/$REPOSITORY:$IMAGE_TAG
          